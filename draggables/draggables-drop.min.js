


/*
    json2.js
    Written by Douglas Crockford
    Public Domain
    http://www.JSON.org/js.html
*/
if (!this.JSON) { this.JSON = {} } (function () { function f(n) { return n < 10 ? "0" + n : n } if (typeof Date.prototype.toJSON !== "function") { Date.prototype.toJSON = function (key) { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null }; String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) { return this.valueOf() } } var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, rep; function quote(string) { escapable.lastIndex = 0; return escapable.test(string) ? '"' + string.replace(escapable, function (a) { var c = meta[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + string + '"' } function str(key, holder) { var i, k, v, length, mind = gap, partial, value = holder[key]; if (value && typeof value === "object" && typeof value.toJSON === "function") { value = value.toJSON(key) } if (typeof rep === "function") { value = rep.call(holder, key, value) } switch (typeof value) { case "string": return quote(value); case "number": return isFinite(value) ? String(value) : "null"; case "boolean": case "null": return String(value); case "object": if (!value) { return "null" } gap += indent; partial = []; if (Object.prototype.toString.apply(value) === "[object Array]") { length = value.length; for (i = 0; i < length; i += 1) { partial[i] = str(i, value) || "null" } v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]"; gap = mind; return v } if (rep && typeof rep === "object") { length = rep.length; for (i = 0; i < length; i += 1) { k = rep[i]; if (typeof k === "string") { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } else { for (k in value) { if (Object.hasOwnProperty.call(value, k)) { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}"; gap = mind; return v } } if (typeof JSON.stringify !== "function") { JSON.stringify = function (value, replacer, space) { var i; gap = ""; indent = ""; if (typeof space === "number") { for (i = 0; i < space; i += 1) { indent += " " } } else { if (typeof space === "string") { indent = space } } rep = replacer; if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) { throw new Error("JSON.stringify") } return str("", { "": value }) } } if (typeof JSON.parse !== "function") { JSON.parse = function (text, reviver) { var j; function walk(holder, key) { var k, v, value = holder[key]; if (value && typeof value === "object") { for (k in value) { if (Object.hasOwnProperty.call(value, k)) { v = walk(value, k); if (v !== undefined) { value[k] = v } else { delete value[k] } } } } return reviver.call(holder, key, value) } text = String(text); cx.lastIndex = 0; if (cx.test(text)) { text = text.replace(cx, function (a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) } if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) { j = eval("(" + text + ")"); return typeof reviver === "function" ? walk({ "": j }, "") : j } throw new SyntaxError("JSON.parse") } } } ());




/*
    js-inflate
    Port by August Lilleaas of script by Masanao Izumo.
    http://www.onicos.com/staff/iz/amuse/javascript/expert/inflate.txt
    Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>
*/
(function (GLOBAL) { var zip_WSIZE = 32768; var zip_STORED_BLOCK = 0; var zip_STATIC_TREES = 1; var zip_DYN_TREES = 2; var zip_lbits = 9; var zip_dbits = 6; var zip_INBUFSIZ = 32768; var zip_INBUF_EXTRA = 64; var zip_slide; var zip_wp; var zip_fixed_tl = null; var zip_fixed_td; var zip_fixed_bl, fixed_bd; var zip_bit_buf; var zip_bit_len; var zip_method; var zip_eof; var zip_copy_leng; var zip_copy_dist; var zip_tl, zip_td; var zip_bl, zip_bd; var zip_inflate_data; var zip_inflate_pos; var zip_MASK_BITS = new Array(0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535); var zip_cplens = new Array(3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0); var zip_cplext = new Array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99); var zip_cpdist = new Array(1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577); var zip_cpdext = new Array(0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13); var zip_border = new Array(16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15); function zip_HuftList() { this.next = null; this.list = null } function zip_HuftNode() { this.e = 0; this.b = 0; this.n = 0; this.t = null } function zip_HuftBuild(b, n, s, d, e, mm) { this.BMAX = 16; this.N_MAX = 288; this.status = 0; this.root = null; this.m = 0; var a; var c = new Array(this.BMAX + 1); var el; var f; var g; var h; var i; var j; var k; var lx = new Array(this.BMAX + 1); var p; var pidx; var q; var r = new zip_HuftNode(); var u = new Array(this.BMAX); var v = new Array(this.N_MAX); var w; var x = new Array(this.BMAX + 1); var xp; var y; var z; var o; var tail; tail = this.root = null; for (i = 0; i < c.length; i++) { c[i] = 0 } for (i = 0; i < lx.length; i++) { lx[i] = 0 } for (i = 0; i < u.length; i++) { u[i] = null } for (i = 0; i < v.length; i++) { v[i] = 0 } for (i = 0; i < x.length; i++) { x[i] = 0 } el = n > 256 ? b[256] : this.BMAX; p = b; pidx = 0; i = n; do { c[p[pidx]]++; pidx++ } while (--i > 0); if (c[0] == n) { this.root = null; this.m = 0; this.status = 0; return } for (j = 1; j <= this.BMAX; j++) { if (c[j] != 0) { break } } k = j; if (mm < j) { mm = j } for (i = this.BMAX; i != 0; i--) { if (c[i] != 0) { break } } g = i; if (mm > i) { mm = i } for (y = 1 << j; j < i; j++, y <<= 1) { if ((y -= c[j]) < 0) { this.status = 2; this.m = mm; return } } if ((y -= c[i]) < 0) { this.status = 2; this.m = mm; return } c[i] += y; x[1] = j = 0; p = c; pidx = 1; xp = 2; while (--i > 0) { x[xp++] = (j += p[pidx++]) } p = b; pidx = 0; i = 0; do { if ((j = p[pidx++]) != 0) { v[x[j]++] = i } } while (++i < n); n = x[g]; x[0] = i = 0; p = v; pidx = 0; h = -1; w = lx[0] = 0; q = null; z = 0; for (; k <= g; k++) { a = c[k]; while (a-- > 0) { while (k > w + lx[1 + h]) { w += lx[1 + h]; h++; z = (z = g - w) > mm ? mm : z; if ((f = 1 << (j = k - w)) > a + 1) { f -= a + 1; xp = k; while (++j < z) { if ((f <<= 1) <= c[++xp]) { break } f -= c[xp] } } if (w + j > el && w < el) { j = el - w } z = 1 << j; lx[1 + h] = j; q = new Array(z); for (o = 0; o < z; o++) { q[o] = new zip_HuftNode() } if (tail == null) { tail = this.root = new zip_HuftList() } else { tail = tail.next = new zip_HuftList() } tail.next = null; tail.list = q; u[h] = q; if (h > 0) { x[h] = i; r.b = lx[h]; r.e = 16 + j; r.t = q; j = (i & ((1 << w) - 1)) >> (w - lx[h]); u[h - 1][j].e = r.e; u[h - 1][j].b = r.b; u[h - 1][j].n = r.n; u[h - 1][j].t = r.t } } r.b = k - w; if (pidx >= n) { r.e = 99 } else { if (p[pidx] < s) { r.e = (p[pidx] < 256 ? 16 : 15); r.n = p[pidx++] } else { r.e = e[p[pidx] - s]; r.n = d[p[pidx++] - s] } } f = 1 << (k - w); for (j = i >> w; j < z; j += f) { q[j].e = r.e; q[j].b = r.b; q[j].n = r.n; q[j].t = r.t } for (j = 1 << (k - 1); (i & j) != 0; j >>= 1) { i ^= j } i ^= j; while ((i & ((1 << w) - 1)) != x[h]) { w -= lx[h]; h-- } } } this.m = lx[1]; this.status = ((y != 0 && g != 1) ? 1 : 0) } function zip_GET_BYTE() { if (zip_inflate_data.length == zip_inflate_pos) { return -1 } return zip_inflate_data.charCodeAt(zip_inflate_pos++) & 255 } function zip_NEEDBITS(n) { while (zip_bit_len < n) { zip_bit_buf |= zip_GET_BYTE() << zip_bit_len; zip_bit_len += 8 } } function zip_GETBITS(n) { return zip_bit_buf & zip_MASK_BITS[n] } function zip_DUMPBITS(n) { zip_bit_buf >>= n; zip_bit_len -= n } function zip_inflate_codes(buff, off, size) { var e; var t; var n; if (size == 0) { return 0 } n = 0; for (; ; ) { zip_NEEDBITS(zip_bl); t = zip_tl.list[zip_GETBITS(zip_bl)]; e = t.e; while (e > 16) { if (e == 99) { return -1 } zip_DUMPBITS(t.b); e -= 16; zip_NEEDBITS(e); t = t.t[zip_GETBITS(e)]; e = t.e } zip_DUMPBITS(t.b); if (e == 16) { zip_wp &= zip_WSIZE - 1; buff[off + n++] = zip_slide[zip_wp++] = t.n; if (n == size) { return size } continue } if (e == 15) { break } zip_NEEDBITS(e); zip_copy_leng = t.n + zip_GETBITS(e); zip_DUMPBITS(e); zip_NEEDBITS(zip_bd); t = zip_td.list[zip_GETBITS(zip_bd)]; e = t.e; while (e > 16) { if (e == 99) { return -1 } zip_DUMPBITS(t.b); e -= 16; zip_NEEDBITS(e); t = t.t[zip_GETBITS(e)]; e = t.e } zip_DUMPBITS(t.b); zip_NEEDBITS(e); zip_copy_dist = zip_wp - t.n - zip_GETBITS(e); zip_DUMPBITS(e); while (zip_copy_leng > 0 && n < size) { zip_copy_leng--; zip_copy_dist &= zip_WSIZE - 1; zip_wp &= zip_WSIZE - 1; buff[off + n++] = zip_slide[zip_wp++] = zip_slide[zip_copy_dist++] } if (n == size) { return size } } zip_method = -1; return n } function zip_inflate_stored(buff, off, size) { var n; n = zip_bit_len & 7; zip_DUMPBITS(n); zip_NEEDBITS(16); n = zip_GETBITS(16); zip_DUMPBITS(16); zip_NEEDBITS(16); if (n != ((~zip_bit_buf) & 65535)) { return -1 } zip_DUMPBITS(16); zip_copy_leng = n; n = 0; while (zip_copy_leng > 0 && n < size) { zip_copy_leng--; zip_wp &= zip_WSIZE - 1; zip_NEEDBITS(8); buff[off + n++] = zip_slide[zip_wp++] = zip_GETBITS(8); zip_DUMPBITS(8) } if (zip_copy_leng == 0) { zip_method = -1 } return n } function zip_inflate_fixed(buff, off, size) { if (zip_fixed_tl == null) { var i; var l = new Array(288); var h; for (i = 0; i < 144; i++) { l[i] = 8 } for (; i < 256; i++) { l[i] = 9 } for (; i < 280; i++) { l[i] = 7 } for (; i < 288; i++) { l[i] = 8 } zip_fixed_bl = 7; h = new zip_HuftBuild(l, 288, 257, zip_cplens, zip_cplext, zip_fixed_bl); if (h.status != 0) { alert("HufBuild error: " + h.status); return -1 } zip_fixed_tl = h.root; zip_fixed_bl = h.m; for (i = 0; i < 30; i++) { l[i] = 5 } zip_fixed_bd = 5; h = new zip_HuftBuild(l, 30, 0, zip_cpdist, zip_cpdext, zip_fixed_bd); if (h.status > 1) { zip_fixed_tl = null; alert("HufBuild error: " + h.status); return -1 } zip_fixed_td = h.root; zip_fixed_bd = h.m } zip_tl = zip_fixed_tl; zip_td = zip_fixed_td; zip_bl = zip_fixed_bl; zip_bd = zip_fixed_bd; return zip_inflate_codes(buff, off, size) } function zip_inflate_dynamic(buff, off, size) { var i; var j; var l; var n; var t; var nb; var nl; var nd; var ll = new Array(286 + 30); var h; for (i = 0; i < ll.length; i++) { ll[i] = 0 } zip_NEEDBITS(5); nl = 257 + zip_GETBITS(5); zip_DUMPBITS(5); zip_NEEDBITS(5); nd = 1 + zip_GETBITS(5); zip_DUMPBITS(5); zip_NEEDBITS(4); nb = 4 + zip_GETBITS(4); zip_DUMPBITS(4); if (nl > 286 || nd > 30) { return -1 } for (j = 0; j < nb; j++) { zip_NEEDBITS(3); ll[zip_border[j]] = zip_GETBITS(3); zip_DUMPBITS(3) } for (; j < 19; j++) { ll[zip_border[j]] = 0 } zip_bl = 7; h = new zip_HuftBuild(ll, 19, 19, null, null, zip_bl); if (h.status != 0) { return -1 } zip_tl = h.root; zip_bl = h.m; n = nl + nd; i = l = 0; while (i < n) { zip_NEEDBITS(zip_bl); t = zip_tl.list[zip_GETBITS(zip_bl)]; j = t.b; zip_DUMPBITS(j); j = t.n; if (j < 16) { ll[i++] = l = j } else { if (j == 16) { zip_NEEDBITS(2); j = 3 + zip_GETBITS(2); zip_DUMPBITS(2); if (i + j > n) { return -1 } while (j-- > 0) { ll[i++] = l } } else { if (j == 17) { zip_NEEDBITS(3); j = 3 + zip_GETBITS(3); zip_DUMPBITS(3); if (i + j > n) { return -1 } while (j-- > 0) { ll[i++] = 0 } l = 0 } else { zip_NEEDBITS(7); j = 11 + zip_GETBITS(7); zip_DUMPBITS(7); if (i + j > n) { return -1 } while (j-- > 0) { ll[i++] = 0 } l = 0 } } } } zip_bl = zip_lbits; h = new zip_HuftBuild(ll, nl, 257, zip_cplens, zip_cplext, zip_bl); if (zip_bl == 0) { h.status = 1 } if (h.status != 0) { if (h.status == 1) { } return -1 } zip_tl = h.root; zip_bl = h.m; for (i = 0; i < nd; i++) { ll[i] = ll[i + nl] } zip_bd = zip_dbits; h = new zip_HuftBuild(ll, nd, 0, zip_cpdist, zip_cpdext, zip_bd); zip_td = h.root; zip_bd = h.m; if (zip_bd == 0 && nl > 257) { return -1 } if (h.status == 1) { } if (h.status != 0) { return -1 } return zip_inflate_codes(buff, off, size) } function zip_inflate_start() { var i; if (zip_slide == null) { zip_slide = new Array(2 * zip_WSIZE) } zip_wp = 0; zip_bit_buf = 0; zip_bit_len = 0; zip_method = -1; zip_eof = false; zip_copy_leng = zip_copy_dist = 0; zip_tl = null } function zip_inflate_internal(buff, off, size) { var n, i; n = 0; while (n < size) { if (zip_eof && zip_method == -1) { return n } if (zip_copy_leng > 0) { if (zip_method != zip_STORED_BLOCK) { while (zip_copy_leng > 0 && n < size) { zip_copy_leng--; zip_copy_dist &= zip_WSIZE - 1; zip_wp &= zip_WSIZE - 1; buff[off + n++] = zip_slide[zip_wp++] = zip_slide[zip_copy_dist++] } } else { while (zip_copy_leng > 0 && n < size) { zip_copy_leng--; zip_wp &= zip_WSIZE - 1; zip_NEEDBITS(8); buff[off + n++] = zip_slide[zip_wp++] = zip_GETBITS(8); zip_DUMPBITS(8) } if (zip_copy_leng == 0) { zip_method = -1 } } if (n == size) { return n } } if (zip_method == -1) { if (zip_eof) { break } zip_NEEDBITS(1); if (zip_GETBITS(1) != 0) { zip_eof = true } zip_DUMPBITS(1); zip_NEEDBITS(2); zip_method = zip_GETBITS(2); zip_DUMPBITS(2); zip_tl = null; zip_copy_leng = 0 } switch (zip_method) { case 0: i = zip_inflate_stored(buff, off + n, size - n); break; case 1: if (zip_tl != null) { i = zip_inflate_codes(buff, off + n, size - n) } else { i = zip_inflate_fixed(buff, off + n, size - n) } break; case 2: if (zip_tl != null) { i = zip_inflate_codes(buff, off + n, size - n) } else { i = zip_inflate_dynamic(buff, off + n, size - n) } break; default: i = -1; break } if (i == -1) { if (zip_eof) { return 0 } return -1 } n += i } return n } var JSInflate = {}; GLOBAL.JSInflate = JSInflate; JSInflate.inflate = function (data) { var out, buff; var i, j; zip_inflate_start(); zip_inflate_data = data; zip_inflate_pos = 0; buff = new Array(1024); out = ""; while ((i = zip_inflate_internal(buff, 0, buff.length)) > 0) { for (j = 0; j < i; j++) { out += String.fromCharCode(buff[j]) } } zip_inflate_data = null; return out } } (this));



/*
    js-zip
    Written by August Lilleaas. Licensed under the MIT license.
    Licence https://github.com/augustl/js-unzip/blob/master/LICENSE
*/
(function (GLOBAL) { var JSUnzip = function (fileContents) { this.fileContents = new JSUnzip.BigEndianBinaryStream(fileContents) }; GLOBAL.JSUnzip = JSUnzip; JSUnzip.MAGIC_NUMBER = 67324752; JSUnzip.prototype = { readEntries: function () { if (!this.isZipFile()) { throw new Error("File is not a Zip file.") } this.entries = []; var e = new JSUnzip.ZipEntry(this.fileContents); while (typeof (e.data) === "string") { this.entries.push(e); e = new JSUnzip.ZipEntry(this.fileContents) } }, isZipFile: function () { return this.fileContents.getByteRangeAsNumber(0, 4) === JSUnzip.MAGIC_NUMBER } }; JSUnzip.ZipEntry = function (binaryStream) { this.signature = binaryStream.getNextBytesAsNumber(4); if (this.signature !== JSUnzip.MAGIC_NUMBER) { return } this.versionNeeded = binaryStream.getNextBytesAsNumber(2); this.bitFlag = binaryStream.getNextBytesAsNumber(2); this.compressionMethod = binaryStream.getNextBytesAsNumber(2); this.timeBlob = binaryStream.getNextBytesAsNumber(4); if (this.isEncrypted()) { throw "File contains encrypted entry. Not supported." } if (this.isUsingUtf8()) { throw "File is using UTF8. Not supported." } if (this.isUsingBit3TrailingDataDescriptor()) { throw "File is using bit 3 trailing data descriptor. Not supported." } this.crc32 = binaryStream.getNextBytesAsNumber(4); this.compressedSize = binaryStream.getNextBytesAsNumber(4); this.uncompressedSize = binaryStream.getNextBytesAsNumber(4); if (this.isUsingZip64()) { throw "File is using Zip64 (4gb+ file size). Not supported" } this.fileNameLength = binaryStream.getNextBytesAsNumber(2); this.extraFieldLength = binaryStream.getNextBytesAsNumber(2); this.fileName = binaryStream.getNextBytesAsString(this.fileNameLength); this.extra = binaryStream.getNextBytesAsString(this.extraFieldLength); this.data = binaryStream.getNextBytesAsString(this.compressedSize) }; JSUnzip.ZipEntry.prototype = { isEncrypted: function () { return (this.bitFlag & 1) === 1 }, isUsingUtf8: function () { return (this.bitFlag & 2048) === 2048 }, isUsingBit3TrailingDataDescriptor: function () { return (this.bitFlag & 8) === 8 }, isUsingZip64: function () { this.compressedSize === 4294967295 || this.uncompressedSize === 4294967295 } }; JSUnzip.BigEndianBinaryStream = function (stream) { this.stream = stream; this.resetByteIndex() }; JSUnzip.BigEndianBinaryStream.prototype = { resetByteIndex: function () { this.currentByteIndex = 0 }, getByteAt: function (index) { return this.stream.charCodeAt(index) }, getNextBytesAsNumber: function (steps) { var res = this.getByteRangeAsNumber(this.currentByteIndex, steps); this.currentByteIndex += steps; return res }, getNextBytesAsString: function (steps) { var res = this.getByteRangeAsString(this.currentByteIndex, steps); this.currentByteIndex += steps; return res }, getByteRangeAsNumber: function (index, steps) { var result = 0; var i = index + steps - 1; while (i >= index) { result = (result << 8) + this.getByteAt(i); i-- } return result }, getByteRangeAsString: function (index, steps) { var result = ""; var max = index + steps; var i = index; while (i < max) { result += String.fromCharCode(this.getByteAt(i)); i++ } return result } } } (this));
/* 
    microformats-shiv.js
    A compact JavaScript cross browser microformats parser by Glenn Jones. Based 
    on the Mozilla Labs Operator microformats parser created by Michael Kaply 
    Copyright (C) 2010 Glenn Jones. All Rights Reserved.
    License: http://microformatshiv.com/license/
*/
var ufShiv={version:0.2,get:function(name,element){var data=[];var nodes=[];var uf=this.internal[name];if(!uf||!element){return this.internal.pack({},"Sorry either the format or element was not found.",this.version)}if(uf.className){nodes=this.internal.getElementsByClassName(element,uf.className);if((nodes.length===0)&&uf.alternateClassName){var altClass=this.internal.getElementsByClassName(element,uf.alternateClassName);if(altClass.length>0){nodes.push(element)}}}else{if(uf.attributeValues){nodes=this.internal.getElementsByAttribute(element,uf.attributeName,uf.attributeValues)}}if(name=="hCard"){var items=[];for(var i=0;i<nodes.length;i++){if(this.internal.findParentByClass(nodes[i],"vcard")===null){items.push(nodes[i])}}nodes=items}for(var x=0;x<nodes.length;x++){data.push(this.internal.getMicroformat(nodes[x],name))}if(name=="XFN"){data=this.internal.compressXFN(data)}var obj={};if(data.length>0){if(uf.className){obj[uf.className]=data}else{obj[uf.altName]=data}}return this.internal.pack(obj,"",this.version)},add:function add(name,object){if(!this.internal[name]){this.internal[name]=object}},internal:{pack:function(data,error,version){var pack={microformats:data};pack["parser-information"]={};pack["parser-information"].name="Microformat Shiv";pack["parser-information"].version=version;if(!error&&error!==""){pack.errors=[error]}return pack},getMicroformat:function(node,microformat){var data={};for(var i in this[microformat].properties){var item=this.getMicroformatProperty(node,microformat,i);if(item!=undefined){data[i]=item}}return data},getMicroformatProperty:function(in_mfnode,mfname,propname){var mfnode=in_mfnode;if(!in_mfnode.origNode&&this[mfname].className&&in_mfnode.ownerDocument){mfnode=this.preProcessMicroformat(in_mfnode)}var propobj;if(this[mfname].properties[propname]){propobj=this[mfname].properties[propname]}else{return undefined}var propnodes;if(propobj.rel===true){propnodes=this.getElementsByAttribute(mfnode,"rel",propname)}else{propnodes=this.getElementsByClassName(mfnode,propname)}if(mfname=="hCard"){var items=[];for(var i=0;i<propnodes.length;i++){var found=this.findParentByClass(propnodes[i],"vcard");if(mfnode==found){items.push(propnodes[i])}}propnodes=items}if(propnodes.length>0){var resultArray=[];for(var y=0;y<propnodes.length;y++){var subresult=this.getPropertyInternal(propnodes[y],mfnode,propobj,propname,mfnode);if(subresult!=undefined){resultArray.push(subresult);if(!propobj.plural){return resultArray[0]}}}if(resultArray.length>0){return resultArray}}else{if(propobj.virtual){return this.getPropertyInternal(mfnode,null,propobj,propname,mfnode)}}return undefined},getPropertyInternal:function(propnode,parentnode,propobj,propname,mfnode){var result;if(propobj.subproperties){for(var subpropname in propobj.subproperties){var subpropnodes;var subpropobj=propobj.subproperties[subpropname];if(subpropobj.rel===true){subpropnodes=this.getElementsByAttribute(propnode,"rel",subpropname)}else{subpropnodes=this.getElementsByClassName(propnode,subpropname)}var resultArray=[];var subresult;for(var i=0;i<subpropnodes.length;i++){subresult=this.getPropertyInternal(subpropnodes[i],propnode,subpropobj,subpropname,mfnode);if(subresult!=undefined){resultArray.push(subresult);if(!subpropobj.plural){break}}}if(resultArray.length===0){subresult=this.getPropertyInternal(propnode,null,subpropobj,subpropname,mfnode);if(subresult!=undefined){resultArray.push(subresult)}}if(resultArray.length>0){result=result||{};if(subpropobj.plural){result[subpropname]=resultArray}else{result[subpropname]=resultArray[0]}}}}if(!parentnode||((result==undefined)&&propobj.subproperties)){if(propobj.virtual){if(propobj.virtualGetter){result=propobj.virtualGetter(this,mfnode||propnode)}else{result=this.datatypeHelper(propobj,propnode)}}}else{if(result==undefined){result=this.datatypeHelper(propobj,propnode,parentnode);if((result==undefined)&&!propobj.subproperties){if(propobj.virtual&&propobj.virtualGetter){result=propobj.virtualGetter(parentnode)}}}}return result},preProcessMicroformat:function(in_mfnode){var mfnode;if((in_mfnode.nodeName.toLowerCase()=="td")&&(in_mfnode.getAttribute("headers"))){mfnode=in_mfnode.cloneNode(true);mfnode.origNode=in_mfnode;var headers=in_mfnode.getAttribute("headers").split(" ");for(var i=0;i<headers.length;i++){var tempNode=in_mfnode.ownerDocument.createElement("span");var headerNode=in_mfnode.ownerDocument.getElementById(headers[i]);if(headerNode){tempNode.innerHTML=headerNode.innerHTML;tempNode.className=headerNode.className;mfnode.appendChild(tempNode)}}}else{mfnode=in_mfnode}var includes=this.getElementsByClassName(mfnode,"include");if(includes.length>0){if(!mfnode.origNode){mfnode=in_mfnode.cloneNode(true);mfnode.origNode=in_mfnode}includes=this.getElementsByClassName(mfnode,"include");var includeId;var include_length=includes.length;for(var y=include_length-1;y>=0;y--){if(includes[y].nodeName.toLowerCase()=="a"){includeId=includes[y].getAttribute("href").substr(1)}if(includes[y].nodeName.toLowerCase()=="object"){includeId=includes[y].getAttribute("data").substr(1)}if(in_mfnode.ownerDocument.getElementById(includeId)){includes[y].parentNode.replaceChild(in_mfnode.ownerDocument.getElementById(includeId).cloneNode(true),includes[y])}}}return mfnode},defaultGetter:function(propnode,parentnode,datatype){function collapseWhitespace(instring){instring=instring.replace(/[\t\n\r ]+/g," ");if(instring.charAt(0)==" "){instring=instring.substring(1,instring.length)}if(instring.charAt(instring.length-1)==" "){instring=instring.substring(0,instring.length-1)}return instring}if((propnode.nodeName.toLowerCase()=="abbr")&&(propnode.getAttribute("title"))){return propnode.getAttribute("title")}else{if((propnode.nodeName.toLowerCase()=="time")&&(propnode.getAttribute("datetime"))){return propnode.getAttribute("datetime")}else{if((propnode.nodeName.toLowerCase()=="img")&&(propnode.getAttribute("alt"))){return propnode.getAttribute("alt")}else{if((propnode.nodeName.toLowerCase()=="area")&&(propnode.getAttribute("alt"))){return propnode.getAttribute("alt")}else{if((propnode.nodeName.toLowerCase()=="textarea")||(propnode.nodeName.toLowerCase()=="select")||(propnode.nodeName.toLowerCase()=="input")){return propnode.value}else{var valueTitles=this.getElementsByClassName(propnode,"value-title");for(var i=valueTitles.length-1;i>=0;i--){if(valueTitles[i].parentNode!=propnode){valueTitles.splice(i,1)}}if(valueTitles.length>0){var valueTitle="";for(var j=0;j<valueTitles.length;j++){valueTitle+=valueTitles[j].getAttribute("title")}return collapseWhitespace(valueTitle)}var values=this.getElementsByClassName(propnode,"value");for(var x=values.length-1;x>=0;x--){if(values[x].parentNode!=propnode){values.splice(x,1)}}if(values.length>0){var value="";for(var z=0;z<values.length;z++){value+=this.defaultGetter(values[z],propnode,datatype)}return collapseWhitespace(value)}var s;if(datatype=="HTML"){s=propnode.innerHTML}else{if(this.getTextContent(propnode)){s=this.getTextContent(propnode)}else{s=this.getTextContent(propnode)}}if(!this.matchClass(propnode,"value")){s=collapseWhitespace(s)}if(s.length>0){return s}}}}}}return undefined},dateTimeGetter:function(propnode,parentnode,raw){function parseTime(time){if(time.match("am")||time.match("a.m.")){time=time.replace("am","");time=time.replace("a.m.","");var times=time.split(":");if(times[0]=="12"){times[0]="00"}if(times[0].length==1){times[0]="0"+times[0]}if(times.length>1){time=times.join(":")}else{time=times[0]+":00:00"}if(times.length==2){time+=":00"}}if(time.match("pm")||time.match("p.m.")){time=time.replace("pm","");time=time.replace("p.m.","");times=time.split(":");if(times[0]<12){times[0]=parseInt(times[0],10)+12}if(times[0].length==1){times[0]="0"+times[0]}if(times.length>1){time=times.join(":")}else{time=times[0]+":00:00"}if(times.length==2){time+=":00"}}return time}var valueTitles=this.getElementsByClassName(propnode,"value-title");if(valueTitles.length>0){var time="";var date="";var value="";var offset="";for(var i=0;i<valueTitles.length;i++){value=valueTitles[i].getAttribute("title");if(value.match("T")){return this.normalizeISO8601(value)}if(value.charAt(4)=="-"){date=value}else{if((value.charAt(0)=="-")||(value.charAt(0)=="+")||(value=="Z")){if(value.length==2){offset=value[0]+"0"+value[1]}else{offset=value}}else{time=value}}}time=parseTime(time);if(raw){return date+(time?"T":"")+time+offset}else{if(date){return this.normalizeISO8601(date+(time?"T":"")+time+offset)}else{return undefined}}}var values=this.getElementsByClassName(propnode,"value");for(var z=values.length-1;z>=0;z--){if(values[z].parentNode!=propnode){values.splice(z,1)}}if(values.length>0){var time="";var date="";var value="";var offset="";for(var y=0;y<values.length;y++){value=this.defaultGetter(values[y],propnode);if(value.match("T")){return this.normalizeISO8601(value)}if(value.charAt(4)=="-"){date=value}else{if((value.charAt(0)=="-")||(value.charAt(0)=="+")||(value=="Z")){if(value.length==2){offset=value[0]+"0"+value[1]}else{offset=value}}else{time=value}}}time=parseTime(time);if(raw){return date+(time?"T":"")+time+offset}else{if(date){return this.normalizeISO8601(date+(time?"T":"")+time+offset)}else{return undefined}}}else{var date;var testDate;if(propnode.hasAttribute("title")){date=propnode.getAttribute("title");testDate=this.normalizeISO8601(date)}if(!testDate){date=this.textGetter(propnode,parentnode)}if(date){if(raw){return parseTime(date)}else{return this.normalizeISO8601(date)}}}return undefined},uriGetter:function(propnode,parentnode){var pairs={a:"href",img:"src",object:"data",area:"href"};var name=propnode.nodeName.toLowerCase();if(pairs.hasOwnProperty(name)){return propnode[pairs[name]]}return this.textGetter(propnode,parentnode)},telGetter:function(propnode,parentnode){var pairs={a:"href",object:"data",area:"href"};var name=propnode.nodeName.toLowerCase();if(pairs.hasOwnProperty(name)){var protocol;if(propnode[pairs[name]].indexOf("tel:")===0){protocol="tel:"}if(propnode[pairs[name]].indexOf("fax:")===0){protocol="fax:"}if(propnode[pairs[name]].indexOf("modem:")===0){protocol="modem:"}if(protocol){if(propnode[pairs[name]].indexOf("?")>0){return unescape(propnode[pairs[name]].substring(protocol.length,propnode[pairs[name]].indexOf("?")))}else{return unescape(propnode[pairs[name]].substring(protocol.length))}}}if(this.matchClass(propnode,"value")){return this.textGetter(parentnode,parentnode)}else{if(!parentnode&&(this.getElementsByClassName(propnode,"type").length>0)){var tempNode=propnode.cloneNode(true);var typeNodes=this.getElementsByClassName(tempNode,"type");for(var i=0;i<typeNodes.length;i++){typeNodes[i].parentNode.removeChild(typeNodes[i])}return this.textGetter(tempNode)}return this.textGetter(propnode,parentnode)}},emailGetter:function(propnode,parentnode){if((propnode.nodeName.toLowerCase()=="a")||(propnode.nodeName.toLowerCase()=="area")){var mailto=propnode.href;if(mailto.indexOf("?")>0){return unescape(mailto.substring("mailto:".length,mailto.indexOf("?")))}else{return unescape(mailto.substring("mailto:".length))}}else{if(this.matchClass(propnode,"value")){return this.textGetter(parentnode,parentnode)}else{if(!parentnode&&(this.getElementsByClassName(propnode,"type").length>0)){var tempNode=propnode.cloneNode(true);var typeNodes=this.getElementsByClassName(tempNode,"type");for(var i=0;i<typeNodes.length;i++){typeNodes[i].parentNode.removeChild(typeNodes[i])}return this.textGetter(tempNode)}return this.textGetter(propnode,parentnode)}}},textGetter:function(propnode,parentnode){return this.defaultGetter(propnode,parentnode,"text")},htmlGetter:function(propnode,parentnode){return this.defaultGetter(propnode,parentnode,"HTML")},normalizeISO8601:function normalizeISO8601(string){var dateArray=string.match(/(\d\d\d\d)(?:-?(\d\d[\d]*)(?:-?([\d]*)(?:[T ](\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(?:Z|(?:([-+])(\d\d)(?::?(\d\d))?)?)?)?)?)?/);var dateString;var tzOffset=0;if(!dateArray){return undefined}if(dateArray[1]){dateString=dateArray[1];if(dateArray[2]){dateString+="-"+dateArray[2];if(dateArray[3]||dateArray[4]){if(dateArray[3]){dateString+="-"+dateArray[3]}if(dateArray[4]){dateString+="T"+dateArray[4];if(dateArray[5]){dateString+=":"+dateArray[5]}else{dateString+=":00"}if(dateArray[6]){dateString+=":"+dateArray[6]}else{dateString+=":00"}if(dateArray[7]){dateString+="."+dateArray[7]}if(dateArray[8]){dateString+=dateArray[8];if((dateArray[8]=="+")||(dateArray[8]=="-")){if(dateArray[9]){if(dateArray[9].length==1){dateString+="0"}dateString+=dateArray[9];if(dateArray[10]){dateString+=dateArray[10]}else{dateString+="00"}}}}}}}}if(string.indexOf("Z")>-1){dateString+="Z"}return dateString},datatypeHelper:function(prop,node,parentnode){var result;var datatype=prop.datatype;switch(datatype){case"dateTime":result=this.dateTimeGetter(node,parentnode);break;case"anyURI":result=this.uriGetter(node,parentnode);break;case"email":result=this.emailGetter(node,parentnode);break;case"tel":result=this.telGetter(node,parentnode);break;case"HTML":result=this.htmlGetter(node,parentnode);break;case"float":var asText=this.textGetter(node,parentnode);if(!isNaN(asText)){result=parseFloat(asText)}break;case"custom":result=prop.customGetter(this,node,parentnode);break;case"microformat":try{result=this.getMicroformat(node,prop.microformat)}catch(ex){if(ex!="Node is not a microformat ("+prop.microformat+")"){break}}if(result!=undefined&&this.hasProperties(result)){if(prop.microformat_property){result=result[prop.microformat_property]}break}default:result=this.textGetter(node,parentnode);break}if(prop.values&&(result!=undefined)){var validType=false;for(var value in prop.values){if(result.toLowerCase()==prop.values[value]){result=result.toLowerCase();validType=true;break}}if(!validType){return undefined}}return result},getElementsByClassName:function(rootNode,className){var returnElements=[];if(rootNode.getElementsByClassName){var col=rootNode.getElementsByClassName(className);for(var i=0;i<col.length;i++){returnElements[i]=col[i]}}else{if(document.evaluate){var xpathExpression;xpathExpression=".//*[contains(concat(' ', @class, ' '), ' "+className+" ')]";var xpathResult=document.evaluate(xpathExpression,rootNode,null,0,null);var node;while((node=xpathResult.iterateNext())){returnElements.push(node)}}else{className=className.replace(/\-/g,"\\-");var elements=rootNode.getElementsByTagName("*");for(var x=0;x<elements.length;x++){if(elements[x].className.match("(^|\\s)"+className+"(\\s|$)")){returnElements.push(elements[x])}}}}return returnElements},getElementsByAttribute:function(rootNode,attributeName,attributeValues){var attributeList=attributeValues.split(" ");var returnElements=[];if(document.evaluate){var xpathExpression=".//*[";for(var i=0;i<attributeList.length;i++){if(i!==0){xpathExpression+=" or "}xpathExpression+="contains(concat(' ', @"+attributeName+", ' '), ' "+attributeList[i]+" ')"}xpathExpression+="]";var xpathResult=document.evaluate(xpathExpression,rootNode,null,0,null);var node;while((node=xpathResult.iterateNext())){returnElements.push(node)}}else{attributeName=attributeName.replace(/\-/g,"\\-");var elements=rootNode.getElementsByTagName("*");for(var x=0;x<elements.length;x++){if(elements[x][attributeName]){var found=false;for(var y=0;y<attributeList.length;y++){if(elements[x][attributeName].match("(^|\\s)"+attributeList[y]+"(\\s|$)")){found=true}}if(found){returnElements.push(elements[x])}}}}return returnElements},findParentByClass:function(node,className){if(document.evaluate){var xpathExpression;var xpathResult;xpathExpression="ancestor::*[contains(concat(' ', @class, ' '), ' "+className+" ')][1]";xpathResult=(node.ownerDocument||node).evaluate(xpathExpression,node,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null);if(xpathResult.singleNodeValue){return xpathResult.singleNodeValue}return null}else{if(arguments.length==2){if(node.parentNode&&node.nodeName!="BODY"){return this.findParentByClass(node.parentNode,className,1)}else{return null}}if(node!==null&&node!==undefined){if(this.matchClass(node,className)){return node}else{if(node.parentNode&&node.nodeName!="BODY"){return this.findParentByClass(node.parentNode,className,1)}else{return null}}}else{return null}}},childernCountByClass:function(node,className){var nodes=this.getElementsByClassName(node,className);if(nodes.length){return nodes.length}else{return 0}},getTextContent:function(element){if(typeof element.textContent!="undefined"){return element.textContent}return element.innerText},matchClass:function(node,className){if(node.nodeType!=11){var classValue=node.getAttribute("class");if(node.getAttribute("className")){classValue=node.getAttribute("className")}return(classValue&&classValue.match("(^|\\s)"+className+"(\\s|$)"))}else{return false}},hasProperties:function(obj){for(var i in obj){return true}return false},compressXFN:function(returnArray){var newArray=[];for(var j=0;j<returnArray.length;j++){var obj=returnArray[j];var newObj={};newObj.rel="";for(var i in obj){if(obj[i]){var name=String(i);if(name!="text"&&name!="link"){newObj.rel+=name+" "}else{newObj[i]=obj[i]}}}if(newObj.rel!==""){newObj.rel=newObj.rel.substring(0,newObj.rel.length-1)}newArray.push(newObj)}return newArray}}};navigator.microformats=ufShiv;if(ufShiv){(function(){var adr={className:"adr",properties:{type:{plural:true,values:["work","home","pref","postal","dom","intl","parcel"]},"post-office-box":{},"street-address":{plural:true},"extended-address":{plural:true},locality:{},region:{},"postal-code":{},"country-name":{}}};ufShiv.add("adr",adr);var hcard={className:"vcard",properties:{adr:{plural:true,datatype:"microformat",microformat:"adr"},agent:{plural:true,datatype:"microformat",microformat:"hCard"},bday:{datatype:"dateTime"},"class":{},category:{plural:true,datatype:"microformat",microformat:"tag",microformat_property:"tag"},email:{subproperties:{type:{plural:true,values:["internet","x400","pref"]},value:{datatype:"email",virtual:true}},plural:true},fn:{virtual:true,virtualGetter:function(context,mfnode){var givenName=context.getElementsByClassName(mfnode,"given-name");var additionalName=context.getElementsByClassName(mfnode,"additional-name");var familyName=context.getElementsByClassName(mfnode,"family-name");var fn="";if(context.getTextContent(givenName)!=undefined){fn+=givenName+" "}if(context.getTextContent(additionalName)!=undefined){fn+=additionalName+" "}if(context.getTextContent(familyName)!=undefined){fn+=familyName+" "}if(fn!==""){return fn.substring(0,fn.length-1)}else{return undefined}}},geo:{datatype:"microformat",microformat:"geo"},key:{plural:true},label:{plural:true},logo:{plural:true,datatype:"anyURI"},mailer:{plural:true},n:{subproperties:{"honorific-prefix":{plural:true},"given-name":{plural:true},"additional-name":{plural:true},"family-name":{plural:true},"honorific-suffix":{plural:true}},virtual:true,virtualGetter:function(context,mfnode){var fn=context.getMicroformatProperty(mfnode,"hCard","fn");var orgs=context.getMicroformatProperty(mfnode,"hCard","org");var given_name=[];var family_name=[];if(fn&&(!orgs||(orgs.length>1)||(fn!=orgs[0]["organization-name"]))){var fns=fn.split(" ");if(fns.length===2){if(fns[0].charAt(fns[0].length-1)==","){given_name[0]=fns[1];family_name[0]=fns[0].substr(0,fns[0].length-1)}else{if(fns[1].length==1){given_name[0]=fns[1];family_name[0]=fns[0]}else{if((fns[1].length==2)&&(fns[1].charAt(fns[1].length-1)==".")){given_name[0]=fns[1];family_name[0]=fns[0]}else{given_name[0]=fns[0];family_name[0]=fns[1]}}}return{"given-name":given_name,"family-name":family_name}}}return undefined}},nickname:{plural:true,virtual:true,virtualGetter:function(context,mfnode){var fn=context.getMicroformatProperty(mfnode,"hCard","fn");var orgs=context.getMicroformatProperty(mfnode,"hCard","org");var given_name;var family_name;if(fn&&(!orgs||(orgs.length)>1||(fn!=orgs[0]["organization-name"]))){var fns=fn.split(" ");if(fns.length===1){return[fns[0]]}}return undefined}},note:{plural:true,datatype:"HTML"},org:{subproperties:{"organization-name":{virtual:true},"organization-unit":{plural:true}},plural:true},photo:{plural:true,datatype:"anyURI"},rev:{datatype:"dateTime"},role:{plural:true},sequence:{},"sort-string":{},sound:{plural:true},title:{plural:true},tel:{subproperties:{type:{plural:true,values:["msg","home","work","pref","voice","fax","cell","video","pager","bbs","car","isdn","pcs"]},value:{datatype:"tel",virtual:true}},plural:true},tz:{},uid:{datatype:"anyURI"},url:{plural:true,datatype:"anyURI"}}};ufShiv.add("hCard",hcard);var hcalendar={className:"vevent",properties:{category:{plural:true,datatype:"microformat",microformat:"tag",microformat_property:"tag"},"class":{values:["public","private","confidential"]},description:{datatype:"HTML"},dtstart:{datatype:"dateTime"},dtend:{datatype:"dateTime",virtual:true,virtualGetter:function(context,mfnode){var dtends=context.getElementsByClassName(mfnode,"dtend");if(dtends.length===0){return undefined}var dtend=context.dateTimeGetter(dtends[0],mfnode,true);var dtstarts=context.getElementsByClassName(mfnode,"dtstart");if(dtstarts.length>0){var dtstart=context.dateTimeGetter(dtstarts[0],mfnode);if(dtstart.match("T")){return context.normalizeISO8601(dtstart.split("T")[0]+"T"+dtend)}}return undefined}},dtstamp:{datatype:"dateTime"},duration:{},geo:{datatype:"microformat",microformat:"geo"},location:{datatype:"microformat",microformat:"hCard"},status:{values:["tentative","confirmed","cancelled"]},summary:{},transp:{values:["opaque","transparent"]},uid:{datatype:"anyURI"},url:{datatype:"anyURI"},"last-modified":{datatype:"dateTime"},rrule:{subproperties:{interval:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"interval")}},freq:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"freq")}},bysecond:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"bysecond")}},byminute:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"byminute")}},byhour:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"byhour")}},bymonthday:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"bymonthday")}},byyearday:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"byyearday")}},byweekno:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"byweekno")}},bymonth:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"bymonth")}},byday:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"byday")}},until:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"until")}},count:{virtual:true,virtualGetter:function(context,mfnode){return context.hCalendar.properties.rrule.retrieve(mfnode,"count")}}},retrieve:function(mfnode,property){var value=ufShiv.internal.textGetter(mfnode);var rrule;rrule=value.split(";");for(var i=0;i<rrule.length;i++){if(rrule[i].match(property)){return rrule[i].split("=")[1]}}return undefined}}}};ufShiv.add("hCalendar",hcalendar);var geo={className:"geo",properties:{latitude:{datatype:"float",virtual:true,virtualGetter:function(context,mfnode){var value=context.textGetter(mfnode);var latlong;if(value&&value.match(";")){latlong=value.split(";");if(latlong[0]){if(!isNaN(latlong[0])){return parseFloat(latlong[0])}}}return undefined}},longitude:{datatype:"float",virtual:true,virtualGetter:function(context,mfnode){var value=context.textGetter(mfnode);var latlong;if(value&&value.match(";")){latlong=value.split(";");if(latlong[1]){if(!isNaN(latlong[1])){return parseFloat(latlong[1])}}}return undefined}}}};ufShiv.add("geo",geo);var tag={altName:"tag",attributeName:"rel",attributeValues:"tag",properties:{tag:{virtual:true,virtualGetter:function(context,mfnode){if(mfnode.href){var href=mfnode.href.split("?")[0].split("#")[0];var url_array=href.split("/");for(var i=url_array.length-1;i>0;i--){if(url_array[i]!==""){var tag=context.tag.validTagName(url_array[i].replace(/\+/g," "));if(tag){try{return decodeURIComponent(tag)}catch(ex){return unescape(tag)}}}}}return null}},link:{virtual:true,datatype:"anyURI"},text:{virtual:true}},validTagName:function(tag){var returnTag=tag;if(tag.indexOf("?")!=-1){if(tag.indexOf("?")===0){return false}else{returnTag=tag.substr(0,tag.indexOf("?"))}}if(tag.indexOf("#")!=-1){if(tag.indexOf("#")===0){return false}else{returnTag=tag.substr(0,tag.indexOf("#"))}}if(tag.indexOf(".html")!=-1){if(tag.indexOf(".html")==tag.length-5){return false}}return returnTag}};ufShiv.add("tag",tag);var xfn={altName:"xfn",attributeName:"rel",attributeValues:"contact acquaintance friend met co-worker colleague co-resident neighbor child parent sibling spouse kin muse crush date sweetheart me",properties:{contact:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"contact")}},acquaintance:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"acquaintance")}},friend:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"friend")}},met:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"met")}},"co-worker":{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"co-worker")}},colleague:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"colleague")}},"co-resident":{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"co-resident")}},neighbor:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"neighbor")}},child:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"child")}},parent:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"parent")}},sibling:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"sibling")}},spouse:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"spouse")}},kin:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"kin")}},muse:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"muse")}},crush:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"crush")}},date:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"date")}},sweetheart:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"sweetheart")}},me:{virtual:true,virtualGetter:function(context,propnode){return context.XFN.getXFN(propnode,"me")}},link:{virtual:true,datatype:"anyURI"},text:{virtual:true}},getXFN:function(propnode,relationship){var rel=propnode.getAttribute("rel");if(rel.match("(^|\\s)"+relationship+"(\\s|$)")){return true}return false}};ufShiv.add("XFN",xfn)})()};/* 
    draggables-drop.js 
    http://draggables.com
    Copyright (C) 2011 Glenn Jones. All Rights Reserved. MIT license
    Full source (unminified) can be downloaded from draggables.com
*/
if(!draggables){var draggables={version:0.1,ariaDropeffect:"copy execute",addDropItem:function(obj){this.internal.dropItems.push(obj)},internal:{dropItems:[],initDrop:function(){var d=draggables.internal;for(var i=0;i<=d.dropItems.length-1;i++){d.buildDropZone(d.dropItems[i])}},buildDropZone:function(obj){var d=draggables.internal;if(this.isString(obj.dropZone)){obj.dropZone=document.getElementById(obj.dropZone)}if(!this.isArray(obj.formats)){obj.formats=[obj.formats]}if(obj.preLoadImages){if(!this.isArray(obj.preLoadImages)){obj.preLoadImages=[obj.preLoadImages]}for(var i=0;i<obj.preLoadImages.length;i++){this.preLoadImage(obj.preLoadImages[i])}}if(this.hasDragDrop()&&!window.FileReader&&!window.XDomainRequest){this.createFileInput(obj.dropZone,obj)}if(this.hasDragDrop()){obj.dropZone.setAttribute("aria-dropeffect",this.ariaDropeffect);this.addEvent(obj.dropZone,"dragover",function(e){d.addClass(obj.dropZone,"dropTargetOver");d.preventDefault(e)});this.addEvent(obj.dropZone,"dragenter",function(e){d.addClass(obj.dropZone,"dropTargetOver");d.preventDefault(e)});this.addEvent(obj.dropZone,"dragleave",function(e){d.removeClass(obj.dropZone,"dropTargetOver");d.preventDefault(e)});this.addEvent(obj.dropZone,"drop",function(e){d.removeClass(obj.dropZone,"dropTargetOver");var url="";var file=null;var filefound=false;var textfound=false;var json={};if(e.dataTransfer.files){for(i=0;i<=e.dataTransfer.files.length-1;i++){file=e.dataTransfer.files[i];if(file.type=="text/html"){filefound=true;d.readHTMLFile(file,obj)}if(file.type=="application/zip"||file.fileName.toLowerCase().indexOf(".zip")>-1){filefound=true;d.readZipFile(file,obj)}}}if(e.dataTransfer.types){for(i=0;i<=e.dataTransfer.types.length-1;i++){if(e.dataTransfer.types[i]=="URL"||e.dataTransfer.types[i]=="text/x-moz-url-data"){url=e.dataTransfer.getData(e.dataTransfer.types[i])}if(url===""&&e.dataTransfer.types[i]=="text/x-moz-url"){url=e.dataTransfer.getData(e.dataTransfer.types[i]).split(" ")[0].split("\n")[0].replace("\r","")}}}if(e.dataTransfer.getData("Text")){var text=e.dataTransfer.getData("Text");if(text!=url){if(text.indexOf("draggablePackage")>0){textfound=true;json=JSON.parse(text);if(d.hasSupportedFormat(json,obj.formats)){d.dataHandler(json,obj)}}else{d.errorHandler("Sorry","The object you drop does not seems to support draggables format.")}}}if(url!==""&&!filefound&&!textfound){d.urlHandler(url,obj)}d.preventDefault(e)})}else{obj.dropZone.style.display="none"}},preLoadImage:function(url){if(url){var img=new Image();img.src=url}},readZipFile:function(file,obj){var found=false;if(window.FileReader){var reader=new FileReader();var d=draggables.internal;reader.onload=function(e){var unzipper=new JSUnzip(reader.result);if(unzipper.isZipFile()){unzipper.readEntries();for(var i=0;i<unzipper.entries.length;i++){var entry=unzipper.entries[i];var uncompressed="";if(entry.fileName.toLowerCase().indexOf("index.htm")>-1){if(entry.compressionMethod===0){uncompressed=entry.data}else{if(entry.compressionMethod===8){uncompressed=JSInflate.inflate(entry.data)}}if(uncompressed!==""){var div=document.createElement("div");div.innerHTML=d.parseHtmlBody(uncompressed);var uf=d.parseMicroformats(obj.formats,div);uf.draggablePackage=true;if(d.hasSupportedFormat(uf,obj.formats)){d.dataHandler(uf,obj);found=true}}}}}};reader.onerror=function(e){d.errorHandler("Problem reading the file","A problem occurred while reading the file. The error code is: "+e.target.error.code)};reader.readAsBinaryString(file)}else{this.fileHandler(file,obj)}return found},readHTMLFile:function(file,obj){var found=false;if(window.FileReader){var reader=new FileReader();var d=draggables.internal;reader.onload=function(e){var div=document.createElement("div");div.innerHTML=d.parseHtmlBody(e.target.result);var uf=d.parseMicroformats(obj.formats,div);uf.draggablePackage=true;if(d.hasSupportedFormat(uf,obj.formats)){d.dataHandler(uf,obj);found=true}};reader.onerror=function(e){d.errorHandler("Problem reading the file","A problem occurred while reading the file. The error code is: "+e.target.error.code)};reader.readAsText(file)}else{this.fileHandler(file,obj)}return found},urlHandler:function(url,options){var d=draggables.internal;var callbackName="loadJSON"+Math.floor(Math.random()*9999999999);window[callbackName]=function(json){if(d.hasSupportedFormat(json,options.formats)){d.dataHandler(json,options)}};var params="url="+url+"&callback="+callbackName+"&output=json&format="+options.formats;var head=document.getElementsByTagName("head")[0];var script=document.createElement("script");script.src="http://ufxtract.com/api/?"+params;head.appendChild(script)},fileHandler:function(file,options){var xhr=new XMLHttpRequest();xhr.open("POST","http://ufxtract.com/api/default.aspx?format="+options.formats.join(",")+"&output=json",true);xhr.setRequestHeader("Content-Type","multipart/form-data");xhr.onload=function(){var d=draggables.internal;var json=JSON.parse(xhr.responseText);if(d.hasSupportedFormat(json,options.formats)){d.dataHandler(json,options)}};xhr.onerror=function(err){draggables.internal.errorHandler("Sorry","There was an error while parsing your file.")};xhr.send(file)},createFileInput:function(element,options){var d=draggables.internal;var form=document.createElement("form");var fileInput=document.createElement("input");fileInput.type="file";fileInput.setAttribute("multiple",true);fileInput.style.position="absolute";this.positionInput(element,fileInput);fileInput.style.opacity=0.01;fileInput.style.backgroundColor="#eee";form.appendChild(fileInput);document.body.appendChild(form);this.addEvent(fileInput,"change",function(e){d.handleFileInputDrop(e,options,fileInput)},false);this.addEvent(document.body,"dragenter",function(e){d.handleFileInputDrag(e,options,fileInput)},false);this.addEvent(fileInput,"click",function(e){e.preventDefault()},false);this.addEvent(window,"resize",function(e){d.positionInput(element,fileInput)},false)},positionInput:function(element,fileInput){var pos=this.findPos(element);fileInput.style.left=pos[0]+"px";fileInput.style.top=pos[1]+"px";fileInput.style.width=parseInt(element.offsetWidth,10)+"px";fileInput.style.height=parseInt(element.offsetHeight,10)+"px"},handleFileInputDrag:function(e,options,fileInput){if(e.dataTransfer.types===null){fileInput.style.display="block"}else{var files=false;for(i=0;i<=e.dataTransfer.types.length-1;i++){if(e.dataTransfer.types[i]=="Files"){files=true}}if(files){fileInput.style.display="block"}else{fileInput.style.display="none"}}},handleFileInputDrop:function(e,options){var files=e.target.files;for(var i=0,len=files.length;i<len;i++){var file=files[i];if(file.type=="text/html"){this.readHTMLFile(file,options)}if(file.type=="application/zip"||file.fileName.toLowerCase().indexOf(".zip")>-1){this.readZipFile(file,options)}}},parseMicroformats:function(formats,element){var json={microformats:{}};for(var i=0;i<formats.length;i++){var uf=navigator.microformats.get(formats[i],element);var format=formats[i].toLowerCase();if(format=="hcard"){format="vcard"}if(format=="hcalendar"){format="vevent"}if(uf!=undefined&&uf.microformats[format]){json.microformats[format]=uf.microformats[format]}}return json},parseHtmlBody:function(html){var htmllc=html.toLowerCase();htmllc=htmllc.replace("< ","<");var start=htmllc.indexOf("<body");if(start>-1){start=htmllc.indexOf(">",start)}var end=htmllc.indexOf("</body");if(start>-1&&end>-1){html=html.substring(start,end)}return html},hasSupportedFormat:function(json,formats){var found=false;if(json.microformats){for(var i=0;i<formats.length;i++){var format=formats[i].toLowerCase();if(format=="hcard"){format="vcard"}if(format=="hcalendar"){format="vevent"}if(json.microformats[format]){if(json.microformats[format].length>0){found=true}}}}if(found){return true}else{this.errorHandler("Sorry","Could not find the the right type of data in the dragged object.");return false}},dataHandler:function(json,options){if(!json.UfErrors){if(json.microformats){this.renderMappings(json.microformats,options)}}else{if(json.UfErrors.length){this.errorHandler("Sorry we had a problem understanding the data",json.UfErrors[0])}}},renderMappings:function(json,options){var maps=options.mappings;if(maps!==undefined){for(var i=0;i<maps.length;i++){var value=this.getStringFromJSON(maps[i][1],json);this.applyMapping(maps[i][0],value)}}if(options.onDataDrop){window[options.onDataDrop](json)}},applyMapping:function(elementDecription,value){var element=null;if(document.getElementById(elementDecription)){element=document.getElementById(elementDecription)}if(elementDecription.indexOf("forms[")===0){var parts=elementDecription.split("[");parts=parts[1].split("]");var fieldRef=parts[1].replace(".","");var formRef=parts[0].replace("'","").replace('"',"");if(document.forms[formRef][fieldRef]){element=document.forms[formRef][fieldRef]}}if(element!==null){switch(element.tagName){case"INPUT":element.value=value;break;case"TEXTAREA":element.value=value;break;case"SELECT":for(var y=0;y<element.options.length;y++){if(element.options[y].text.toLowerCase()==value.toLowerCase()||element.options[y].value.toLowerCase()==value.toLowerCase()){element.options[y].selected=true}else{element.options[y].selected=false}}break;case"IMG":element.setAttribute("src",value);break;default:if(element.innerHTML){element.innerHTML=value}break}}},getStringFromJSON:function(exp,context){var value=this.getObjectFromJSON(exp,context);if(typeof(value)=="string"||typeof(value)=="number"){return new String(value)}else{return""}},getObjectFromJSON:function(exp,context){try{var currentContext=context;var arrayDots=exp.split(".");for(var i=0;i<arrayDots.length;i++){if(arrayDots[i].indexOf("[")>-1){arrayDots[i]=arrayDots[i].replace(/]/g,"");var arrayAB=arrayDots[i].split("[");for(var x=0;x<arrayAB.length;x++){if(arrayAB[x]!==null){if(arrayAB[x].indexOf("'")>-1){currentContext=this.getPropertyArrayItem(arrayAB[x],currentContext)}else{currentContext=this.getArrayObject(x,arrayAB,currentContext)}}}}else{if(currentContext[arrayDots[i]]!==null||currentContext[arrayDots[i]]!=="undefined"){currentContext=currentContext[arrayDots[i]]}}}}catch(err){currentContext=null}if(typeof currentContext==="function"){currentContext=currentContext.apply(context)}if(currentContext=="undefined"){currentContext=null}return currentContext},getArrayObject:function(index,array,currentContext){var arrayName=array[index];var arrayPosition=Number(array[index+1]);var output=null;if(isNaN(arrayPosition)){output=this.getPropertyArrayItem(array[index],currentContext)}else{if(currentContext[arrayName]!==null&&currentContext[arrayName]!=="undefined"){if(currentContext[arrayName][arrayPosition]!==null&&currentContext[arrayName][arrayPosition]!=="undefined"){output=currentContext[arrayName][arrayPosition];array[index+1]=null}}}return output},getPropertyArrayItem:function(name,currentContext){name=name.replace(/\'/g,"");return currentContext=currentContext[name]},errorHandler:function(name,msg){alert(name+" \n"+msg)},findPos:function(obj){var curleft=curtop=0;if(obj.offsetParent){do{curleft+=parseInt(obj.offsetLeft,10);curtop+=parseInt(obj.offsetTop,10)}while(obj==obj.offsetParent)}return[curleft,curtop]},preventDefault:function(e){if(e.preventDefault){e.preventDefault()}try{e.returnValue=false}catch(ex){}},cancelBubble:function(e){if(window.event){window.event.cancelBubble=true}else{e.stopPropagation()}},hasClass:function(elt,className){return elt.className.match(new RegExp("(\\s|^)"+className+"(\\s|$)"))},addClass:function(elt,className){if(!this.hasClass(elt,className)){elt.className+=" "+className}},removeClass:function(elt,className){if(this.hasClass(elt,className)){var reg=new RegExp("(\\s|^)"+className+"(\\s|$)");elt.className=elt.className.replace(reg," ")}},hasDragDrop:function(){var element=document.createElement("div");var name="ondragstart";var isSupported=(name in element);if(!isSupported&&element.setAttribute){element.setAttribute(name,"return;");isSupported=typeof element[name]=="function"}element=null;return isSupported},addEvent:function(obj,type,fn){if(obj.attachEvent){obj["e"+type+fn]=fn;obj[type+fn]=function(){obj["e"+type+fn](window.event)};obj.attachEvent("on"+type,obj[type+fn])}else{obj.addEventListener(type,fn,false)}},removeEvent:function(obj,type,fn){if(obj.detachEvent){obj.detachEvent("on"+type,obj[type+fn]);obj[type+fn]=null}else{obj.removeEventListener(type,fn,false)}},isArray:function(obj){return obj&&!(obj.propertyIsEnumerable("length"))&&typeof obj==="object"&&typeof obj.length==="number"},isString:function(obj){return typeof(obj)=="string"}}};var d=draggables;var i=d.internal;d.getStringFromJSON=function(exp,context){return draggables.internal.getStringFromJSON(exp,context)};d.getObjectFromJSON=function(exp,context){return draggables.internal.getObjectFromJSON(exp,context)};d.applyMapping=function(elementDecription,value){return draggables.internal.applyMapping(elementDecription,value)};i.addEvent(window,"load",i.initDrop)};